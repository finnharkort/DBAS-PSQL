WITH RECURSIVE relevantRivers AS(
    SELECT
        name AS river,
        River.length AS totlength,
        name AS finalDestination,
        1 AS numrivers,
        name || '' AS path
    FROM River
    WHERE name IN ('Nile','Amazonas','Yangtze','Rhein','Donau','Mississippi')
    UNION ALL
    SELECT 
        name AS river,
        River.length + relevantRivers.totlength AS totlength,
        finalDestination,
        relevantRivers.numrivers+1 AS numrivers,
        path||'-'|| name AS path
    FROM River
    JOIN relevantRivers ON River.river = relevantRivers.river
),
largestRivers AS(
    SELECT 
        finalDestination,
        MAX(numrivers) AS numrivers
    FROM relevantRivers
    GROUP BY finalDestination
)
SELECT
    RANK() OVER (ORDER BY largestRivers.numrivers) AS rank,
    relevantRivers.path,
    largestRivers.numrivers,
    relevantRivers.totlength
FROM largestRivers
JOIN relevantRivers ON largestRivers.finalDestination = relevantRivers.finalDestination AND largestRivers.numrivers = relevantRivers.numrivers
ORDER BY rank,totlength DESC;